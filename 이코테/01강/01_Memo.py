'''
* 가장 출제 빈도가 높은 알고리즘 유형
- 그리디 (쉬운 난이도)
- 구현
- DFS/BFS를 활용한 탐색
'''
'''
* 문제에서 가장 먼저 확인해야 하는 내용은 시간제한(수행시간 요구사항)입니다
* 시간제한이 1초인 문제를 만났을 때, 일반적인 기준은 다음과 같습니다
- N의 범위가 500인 경우: 시간 복잡도가 O(N^3)인 알고리즘을 설계하면 문제를 풀 수 있습니다
- N의 범위가 2,000인 경우: 시간 복잡도가 O(N^2)인 알고리즘을 설계하면 문제를 풀 수 있습니다
- N의 범위가 100,000인 경우: 시간 복잡도가 O(NlogN)인 알고리즘을 설계하면 문제를 풀 수 있습니다
- N의 범위가 10,000,000인 경우: 시간 복잡도가 O(N)인 알고리즘을 설계하면 문제를 풀 수 있습니다
'''
'''
* 일반적인 알고리즘 문제 해결 과정
1. 지문 읽기 및 컴퓨터적 사고
2. 요구사항(복잡도) 분석
3. 문제 해결을 위한 아이디어 찾기
4. 소스코드 설계 및 코딩
'''